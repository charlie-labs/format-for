name: Release (autopublish + GH Release)

on:
  push:
    branches: [master]

permissions:
  contents: write # needed to create Git tags/Releases
  id-token: write # needed for npm provenance (npm >= 9.5)

concurrency:
  group: release-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    # Do not reference `secrets` at the job level; it is not available in this context
    # and causes a workflow compilation error. Gate on secrets at the step level instead.
    if: ${{ !github.event.repository.is_template }}
    name: Publish to npm and create GitHub Release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json

      - name: Setup Node.js (for npm)
        uses: actions/setup-node@v6
        with:
          node-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: TypeScript typecheck
        run: bun run typecheck

      - name: ESLint
        run: bun run lint

      - name: Tests
        run: bun run test

      - name: Build (if present)
        # Run build if the repo defines one; do nothing otherwise
        run: npm run build --if-present

      - name: Read package metadata
        id: pkg
        run: |
          echo "name=$(jq -r .name package.json)" >> "$GITHUB_OUTPUT"
          echo "version=$(jq -r .version package.json)" >> "$GITHUB_OUTPUT"

      - name: Check if version exists on npm
        id: npm_version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if npm view "${{ steps.pkg.outputs.name }}@${{ steps.pkg.outputs.version }}" version >/dev/null 2>&1; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish (npm)
        id: publish
        # Only publish when a new version is pending
        if: ${{ steps.npm_version.outputs.exists == 'false' }}
        # Pin to the commit SHA for JS-DevTools/npm-publish@v4
        uses: JS-DevTools/npm-publish@ad693561f8a5b5d4c76f14407da60aa15cb10f90
        with:
          token: ${{ secrets.NPM_TOKEN }}
          provenance: true
          # By default, this action runs with --ignore-scripts. We run checks above explicitly.

      - name: Create GitHub Release
        # Only create a GitHub Release when a new version was actually published
        # Compatible across action versions: v1/v2 used 'none'; v3+ use empty string when no publish
        if: ${{ steps.publish.outputs.type != '' && steps.publish.outputs.type != 'none' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "v${{ steps.publish.outputs.version }}" \
            --title "v${{ steps.publish.outputs.version }}" \
            --generate-notes
